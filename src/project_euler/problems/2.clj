(ns project-euler.problems.2)

;; Each new term in the Fibonacci sequence is generated by adding the previous two terms.
;; By starting with 1 and 2, the first 10 terms will be:
;;     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;; By considering the terms in the Fibonacci sequence whose values do not exceed four million,
;; find the sum of the even-valued terms.

(defn- fib-up-to-n [n]
  "Returns all the fibonacci numbers starting with 1 that are smaller than `n`"
  (loop [a 1
         b 2
         acc [a b]]
    (let [c (+ a b)]
      (if (< n c)
        acc
        (recur b c (conj acc c))))))  

(defn- sum-even-fib-to-n [n]
  (transduce (filter even?) + (fib-up-to-n n)))

(def solution (time (sum-even-fib-to-n (* 4 1000 1000))))
